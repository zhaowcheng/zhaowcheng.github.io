[ { "title": "Python入门教程-8-函数定义", "url": "/zhaowcheng.github.io/posts/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-8-%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89/", "categories": "Python入门教程", "tags": "", "date": "2020-11-24 10:45:50 +0800", "snippet": "函数定义先看一个简单的函数定义的例子，以 def 语句开头，定义一个名为 add 的函数，接收两个参数 a 和 b，然后返回这两个参数的 和：&amp;gt;&amp;gt;&amp;gt; def add(a, b):... return a + b...&amp;gt;&amp;gt;&amp;gt; add(1, 2)3&amp;gt;&amp;gt;&amp;gt;在 Python 中，一个定义好的函数可以把函数名赋值给其他变量，然后通过其他变量也可以调用该函数：&amp;gt;&amp;gt;&amp;gt; def add(a, b):... return a..." }, { "title": "Python入门教程-7-流程控制", "url": "/zhaowcheng.github.io/posts/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-7-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/", "categories": "Python入门教程", "tags": "", "date": "2020-10-18 15:58:25 +0800", "snippet": "ifif 是条件控制语句，其语法定义如下：if_stmt ::= &quot;if&quot; expression &quot;:&quot; suite ( &quot;elif&quot; expression &quot;:&quot; suite )* [&quot;else&quot; &quot;:&quot; suite]if 是固定格式，当 if 后面的 expression 为 真 时执行其后面的 suite，然后可以在后面接 0 或任意多个 elif 语句，最后一条 else 语句为 可选。&amp;gt;&amp;..." }, { "title": "Python入门教程-6-字典与集合", "url": "/zhaowcheng.github.io/posts/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-6-%E5%AD%97%E5%85%B8%E4%B8%8E%E9%9B%86%E5%90%88/", "categories": "Python入门教程", "tags": "", "date": "2020-08-06 10:31:58 +0800", "snippet": "字典（dict）字典通过 键值对(key: value) 的方式，把 key 映射到 value。key 必须是 可 hash 的(hashable)，由于 Python 中所有内置的 不可变类型(immutable) 都是可 hash 的，所以都可用作字典的 key，比如 字符串(str)、数字(int, float) 和 只包含不可变类型元素的元组(tuple)，如果元组直接或间接的包含了 可变类型 的元素，也不能作为字典的 key。value 则可以是任意类型。字典中元素是无序的，并不会按照插入的顺序排列，可能会是任意的顺序，如果想要有序的字典，可以使用 collections.O..." }, { "title": "Python入门教程-5-列表与元组", "url": "/zhaowcheng.github.io/posts/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-5-%E5%88%97%E8%A1%A8%E4%B8%8E%E5%85%83%E7%BB%84/", "categories": "Python入门教程", "tags": "", "date": "2020-07-15 15:16:00 +0800", "snippet": "序列（Sequence）在前面已经介绍过的 字符串(str)，以及接下来要学习的 列表(list) 和 元组(tuple) 都属于 序列(Sequence) 类型。序列又分为 可变序列(mutable) 和 不可变序列(immutable)，可变指的是可修改序列的元素，列表属于可变序列，字符串和元组都属于不可变序列。# 列表使用中括号表示&amp;gt;&amp;gt;&amp;gt; nums = [1, 2, 3]&amp;gt;&amp;gt;&amp;gt; type(nums)&amp;lt;class &#39;list&#39;&amp;gt;&amp;gt;&amp;gt..." }, { "title": "Python入门教程-4-字符串", "url": "/zhaowcheng.github.io/posts/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-4-%E5%AD%97%E7%AC%A6%E4%B8%B2/", "categories": "Python入门教程", "tags": "", "date": "2020-07-10 17:39:07 +0800", "snippet": "在上一节课（数据类型）中对 字符串(str) 进行了一个简单的介绍，由于字符串在 Python 中使用频率较高，所以这一节课中专门对字符串进行一个深入的讲解。字符串方法字符串(str) 在 Python 中是一个 对象(object)，并且包含很多的 方法(method)，这些方法可以给我们操作字符串带来很大的方便，下面列举一些常用的方法及其使用示例： str.capitalize() 把字符串的首字母变成大写。 &amp;gt;&amp;gt;&amp;gt; &#39;hello&#39;.capitalize() &#39;Hello&#39; ..." }, { "title": "Python入门教程-3-数据类型", "url": "/zhaowcheng.github.io/posts/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-3-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/", "categories": "Python入门教程", "tags": "", "date": "2020-06-12 17:52:02 +0800", "snippet": "数字：int, floatPython 中的整数和数学上的整数一样，但是跟 Python2 和 C 语言相比不同的是，Python3 中的整数没有 短整型(int) 和 长整型(long) 的区别，即 int 直接相当于 Python2 和 C 语言中的 长整型(long) 类型。Python 中的 浮点数(float) 则相当于数学上的小数。叫做浮点数是由于在计算机中小数的表示方法有 浮点表示 和 定点表示 的区别，浮点表示即小数点的位置可变，比如 1.23 也可以表示为 0.123e1。关于浮点数可以参考《浮点数的二进制表示》。四则运算：# 加减乘除&amp;gt;&amp;gt;&..." }, { "title": "Python入门教程-2-安装和使用", "url": "/zhaowcheng.github.io/posts/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-2-%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/", "categories": "Python入门教程", "tags": "", "date": "2020-03-07 20:03:27 +0800", "snippet": "Windows下载安装包进入Python官网的 windows downloads 页面，以Python 3.5.1为例，可以看到除了帮助文件之外一共有6个安装包可以下载，操作系统位数分为32位(X86)和64位(x86-64)，安装包类型分为embeddable、executable、web-based三种，所以一共有 2*3 = 6 个安装包可下载。需要注意的是从Python 3.5开始就只支持Windows Vista及以上的版本，如果是Windows XP则只能选择安装Python 3.4。如何查看操作系统版本和位数可以参考 微软官方帮助文档。3种不同类型的安装包区别如下： e..." }, { "title": "Python入门教程-1-简介", "url": "/zhaowcheng.github.io/posts/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-1-%E7%AE%80%E4%BB%8B/", "categories": "Python入门教程", "tags": "", "date": "2020-03-04 17:43:50 +0800", "snippet": "课程说明在 廖雪峰Python3教程 和 Python3.5官方文档 的基础上选取部分内容进行适当讲解，预计每节课10~20分钟左右，只是进行一个简单入门讲解，所以每个小节最后附上讲解内容对应章节的链接，各位同学可在课后进行深入的学习。Python简介Python是由荷兰人Guido van Rossum (“龟叔”)于1989年圣诞节期间，为了打发时间而编写。Python这个名字取自作者很喜欢的BBC电视剧”Monty Python’s Flying Circus”。Python是在另一种编程语言 ABC 的基础上发展而来，ABC是“龟叔”参与设计的一种教学语言，他认为ABC非常优美和..." } ]
